disabled_rules: # rule identifiers to exclude from running
#  - colon
#  - comma
#  - control_statement
#  - file_length
#  - force_cast
#  - function_body_length
#  - leading_whitespace
#  - line_length
#  - nesting
#  - operator_whitespace
#  - opening_brace
#  - return_arrow_whitespace
#  - statement_position
#  - todo
#  - trailing_newline
#  - trailing_semicolon
#  - type_body_length
#  - type_name
#  - identifier_name
#  - force_try
#  - identifier_name
#  - weak_delegate
#  - redundant_string_enum_value
#  - cyclomatic_complexity
  - empty_enum_arguments
  - trailing_whitespace
  - private_over_fileprivate
  - unused_optional_binding
#  - multiple_closures_with_trailing_closure
  - notification_center_detachment
opt_in_rules: # some rules are only opt-in
  - empty_count
  - multiline_parameters
  - multiline_arguments
  - shorthand_optional_binding
  - explicit_init
# parameterized rules can be customized from this configuration file
file_length:
  warning: 700
  error: 1000
  ignore_comment_only_lines: true
line_length:
  warning: 130
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_interpolated_strings: true
  ignores_urls: true
# parameterized rules are first parameterized as a warning level, then error level.
function_body_length:
  - 150 # warning
  - 200 # error
type_body_length:
  - 400 # warning
  - 500 # error
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 50
    error: 60
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length: # only min_length
    error: 3 # only error
  max_length:
    warning: 50
  excluded: # excluded via string array
    - id
    - url
    - i
    - on
    - up
  allowed_symbols: ["_"]
cyclomatic_complexity:
  ignores_case_statements: true
custom_rules:
  discourage_print:
    included: ".*\\.swift"
    name: "print()"
    regex: "((\\bprint)|(Swift\\.print))\\s*\\("
    message: "Prefer os_log() or debugPrint(#file, #function, ...)  over print()"
    severity: error
  discourage_dispatch_queue_main:
    included: ".*\\.swift"
    name: "DispatchQueue.main.async"
    regex: "DispatchQueue\\.main\\.async \\{"
    message: "Prefer Task { @MainActor in } over Dispatch.main.async { }"
    severity: warning
  discourage_boolean_optional_default_value:
    included: ".*\\.swift"
    name: "Optional Bool with default value"
    regex: "\\b.* \\?\\? false\\b"
    message: "Prefer use of == true than ?? false"
    severity: warning
